
# ######################################################
# ############## from product.view #####################
# ######################################################

# from django.http import Http404
# from django.shortcuts import render, get_object_or_404, redirect

# from .forms import ProductForm, RawProductForm
# from .models import Product
# # Create your views here.

# # def product_create_view(request):
# #     my_form = RawProductForm()
# #     if request.method == 'POST':
# #         my_form = RawProductForm(request.POST)
# #         if my_form.is_valid():
# #             print(my_form.cleaned_data)
# #             Product.objects.create(**my_form.cleaned_data)
# #         else:
# #             print(my_form.errors)

# #     context ={
# #         'form' : my_form
# #     } 

# #     return render(request, "products/product_create.html", context)


# # def product_create_view(request):
# #     # print(request.GET)
# #     # print(request.POST)
# #     my_new_title = request.POST.get('title')
# #     print(my_new_title)
# #     Product.objects.create(title = my_new_title)
# #     context ={} 

# #     return render(request, "products/product_create.html", context)

# def product_create_view(request):
#     form = ProductForm(request.POST or None)
#     if form.is_valid():
#         form.save()
#         form = ProductForm()
#     context ={'form' : form} 
    
#     return render(request, "products/product_create.html", context)


# def product_detail_view(request):
#     obj = Product.objects.get(id=1)
#     # context = {
#     #     'title' : obj.title,
#     #     'description' : obj.description
#     # }
#     context ={
#         'object' : obj
#     } 
    
#     return render(request, "products/product_detail.html", context)




# def render_initial_data(request):
#     initial_data = {
#         'title': 'My my This awesome title'
#     }
#     obj = Product.objects.get(id=1)
#     form = ProductForm(request.POST or None, initial=initial_data, instance = obj)
#     if form.is_valid():
#         form.save
#     context = {
#         'form': form
#     }
#     return render(request, "products/product_create.html", context)


# def dynamic_lookup_view(request, id):
#     # obj = Product.objects.get(id=id)
#     obj = get_object_or_404(Product,id=id)
#     # try:
#     #     obj = Product.objects.get(id=id)
#     # except Product.DoesNotExist:
#     #     raise Http404

#     context = {"object":obj}
#     return render(request, "products/product_detail.html", context)


# def product_list_view(request):
#     queryset=Product.objects.all()
#     context={'object_list':queryset}

#     return render(request, "products/product_list.html",context)


# def product_delete_view(request, id):
#     obj = get_object_or_404(Product,id=id)
#     if request.method == "POST":
#         obj.delete()
#         return redirect('../../')
#     context = {"object": obj}

#     return render(request, "products/product_delete.html",context)



# ######################################################
# ############## from trydjango.urls ###################
# ######################################################

# from django.contrib import admin
# from django.urls import path

# from pages.views import home_view, Contact_view, about_view, Social_view
# from products.views import (product_detail_view, product_create_view,
#                             render_initial_data,dynamic_lookup_view,
#                             product_delete_view, product_list_view)


# urlpatterns = [
#     path('', home_view, name='home'),
#     path('about/', about_view),
#     path('contact/', Contact_view),

#     path('social/', Social_view),
#     path("admin/", admin.site.urls),
#     path('initial/', render_initial_data),

#     path('product/', product_detail_view),
#     path('create/', product_create_view, name='home'),

#     path('products/<int:id>/', dynamic_lookup_view, name = 'product-detail'),
#     path('products/<int:id>/delete/', product_delete_view, name = 'product-delete'),
#     path('products/', product_list_view, name = 'product-list'),

# ]
